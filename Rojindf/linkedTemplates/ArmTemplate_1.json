{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "Rojindf"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PayPalTransformation')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "PayPalPayments",
								"type": "DatasetReference"
							},
							"name": "PayPalTransactions"
						},
						{
							"dataset": {
								"referenceName": "PyPalProducts",
								"type": "DatasetReference"
							},
							"name": "PayPalProducts"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "AzureSqlDatabase1",
								"type": "LinkedServiceReference"
							},
							"name": "TransferToDB"
						}
					],
					"transformations": [
						{
							"name": "PayPalJoin"
						},
						{
							"name": "StatusFilter"
						}
					],
					"scriptLines": [
						"source(output(",
						"          id as string,",
						"          {Created date (UTC)} as string,",
						"          Amount as string,",
						"          {Amount Refunded} as string,",
						"          Currency as string,",
						"          Captured as string,",
						"          {Converted Amount} as string,",
						"          {Converted Amount Refunded} as string,",
						"          {Converted Currency} as string,",
						"          Description as string,",
						"          Fee as string,",
						"          Status as string,",
						"          {Seller Message} as string,",
						"          {Card ID} as string,",
						"          {Customer ID} as string,",
						"          {Invoice ID} as string,",
						"          Transfer as string,",
						"          {price_id (metadata)} as string,",
						"          {product_id (metadata)} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> PayPalTransactions",
						"source(output(",
						"          id as string,",
						"          Name as string,",
						"          {Date (UTC)} as string,",
						"          {Tax Code} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> PayPalProducts",
						"PayPalTransactions, PayPalProducts join({product_id (metadata)} == PayPalProducts@id,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> PayPalJoin",
						"PayPalJoin filter(equals(Status, \"Paid\")) ~> StatusFilter",
						"StatusFilter sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'sqlserver',",
						"     schemaName: 'staging',",
						"     tableName: 'PayPalData',",
						"     insertable: true,",
						"     updateable: false,",
						"     deletable: false,",
						"     upsertable: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          Transaction_id = PayPalTransactions@id,",
						"          {Created date (UTC)},",
						"          Amount,",
						"          {Amount Refunded},",
						"          Currency,",
						"          Captured,",
						"          {Converted Amount},",
						"          {Converted Amount Refunded},",
						"          {Converted Currency},",
						"          Description,",
						"          Fee,",
						"          Status,",
						"          {Seller Message},",
						"          {Card ID},",
						"          {Customer ID},",
						"          {Invoice ID},",
						"          Transfer,",
						"          {price_id (metadata)},",
						"          {product_id (metadata)},",
						"          Product_id = PayPalProducts@id,",
						"          Name,",
						"          {Date (UTC)},",
						"          {Tax Code}",
						"     )) ~> TransferToDB"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PayPalTransformationPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PayPalTransformation",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "PayPalTransformation",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"PayPalTransactions": {},
									"PayPalProducts": {},
									"TransferToDB": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-03-07T13:44:31Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/PayPalTransformation')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PayPalCopyPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PayPalCopyPipeline",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "1:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DelimitedText6",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "PayPalPayments",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "PayPalCopyPipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DelimitedText8",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "PyPalProducts",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "PayPal Transform Pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PayPalTransformationPipeline",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Copy Data Failure",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Failed"
								]
							},
							{
								"activity": "PayPalCopyPipeline",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": "PaypalPipelineFailure",
							"errorCode": "404"
						}
					},
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "PayPal Transform Pipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Exporttocsv",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-03-11T08:33:35Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PayPalTransformationPipeline')]"
			]
		}
	]
}